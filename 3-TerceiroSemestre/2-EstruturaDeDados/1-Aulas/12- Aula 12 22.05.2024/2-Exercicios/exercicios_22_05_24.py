# -*- coding: utf-8 -*-
"""Exercicios-22.05.24.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yE1QuB_2yfu8SI2kpq7qno2L45qAwtMj

1)Faça um programa que possua um vetor denominado A que armazene 6 numeros inteiros. O programa deve executar os seguintes passos: (a) Atribua os seguintes valores a esse vetor: 1, 0, 5, -2, -5, 7. (b) Armazene em uma variavel inteira (simples) a soma entre os valores das posições A[0], A[1] e A[5] do vetor e mostre na tela esta soma. (c) Modifique o vetor na posição 4, atribuindo a esta posição ao o valor 100. ˜ (d) Mostre na tela cada valor do vetor A, um em cada linha.

2)Crie um programa que leia 6 valores inteiros e, em seguida, mostre na tela os valores lidos.

3)Faça um programa que preencha um vetor com 10 numeros reais, calcule e mostre a quantidade de numeros negativos e a soma dos números positivos desse vetor.
"""

#Exercicio 1
import numpy as np
vet = np.array(6)

vet = np.array([1, 0, 5, -2, -5, 7])

soma = vet[0]+vet[1]+vet[5]
print(f"Vetor: {vet}")
print(f"Soma: {soma}")
vet[4] = 100

for numero in vet:
    print(numero)

#Exercicio 2
import numpy as np
vet = np.array([])


for num in range(6):
  vet = np.append(vet,int(input(f"{num+1}-Digite um número:")))


print(vet)

#Exercicio 3
import numpy as np
vet = np.array([])
vetN = np.array([])
vetP = np.array([])
val = 0

for num in range(10):
  val = int(input(f"{num+1}-Digite um número:"))
  vet =  np.append(vet, val)
  if (val < 0):
    vetN =  np.append(vetN, val)
    print("Número negativo!")
  elif (val >= 0):
    vetP =  np.append(vetP, val)
    print("Número positivo")

print(f"Vetor principal: {vet}")
print(f"Soma de todos os números: {sum(vet)}")
print(f"Vetor positivo: {vetP}")
print(f"Soma dos números positivos: {sum(vetP)}")
print(f"Vetor Negativo: {vetN}")
print(f"Soma dos números negativos: {sum(vetN)}")